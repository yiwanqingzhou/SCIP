(define (sum term a next b)
  (if (> a b)
      0
      ( + (term a)
          (sum term (next a) next b))))

(define (integral f a b dx)
  (define (add-dx x) (+ x dx))
  (* (sum f (+ a (/ dx 2.0)) add-dx b) 
      dx))

(define (cube x) (* x x x))

(display (integral cube 0 1 0.01))
(newline)

(define (integral-h f a b n)
  (define h (/ (- b a) n))
  (define (y k)
      (f (+ a (* k h))))
  (define (mutifator k)
    (cond ((= k 0) 1)
          ((= k n) 1)
          ((even? k) 2)
          (else 4)))
  (define (even? x)
    (= (remainder x 2) 0))
  (define (term x)
    (* (mutifator x) (y x)))
  (define (next x)
    (+ x 1))
  (* (/ h 3)
     (sum term 0 next n)))

(display (integral-h cube 0.0 1 100))
(newline)
(display (integral-h cube 0.0 1 1000))
(newline)